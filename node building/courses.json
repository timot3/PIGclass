[
{"name": "CS\u00a0100", "ptag": "\nIntroduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.\n"},
{"name": "CS\u00a0101", "ptag": "\nFundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH\u00a0220 or MATH\u00a0221. This course satisfies the General Education Criteria for:Quantitative Reasoning II"},
{"name": "CS\u00a0102", "ptag": "\nSame as INFO\u00a0102. See INFO\u00a0102.\n"},
{"name": "CS\u00a0105", "ptag": "\nComputing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH\u00a0112. This course satisfies the General Education Criteria for:Quantitative Reasoning I"},
{"name": "CS\u00a0107", "ptag": "\nSame as IS\u00a0107 and STAT\u00a0107. See STAT\u00a0107.This course satisfies the General Education Criteria for:Quantitative Reasoning I"},
{"name": "CS\u00a0125", "ptag": "\nBasic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH\u00a0112. This course satisfies the General Education Criteria for:Quantitative Reasoning I"},
{"name": "CS\u00a0126", "ptag": "\nFundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS\u00a0242 and CS\u00a0126. Prerequisite: CS\u00a0125. For majors only.\n"},
{"name": "CS\u00a0173", "ptag": "\nDiscrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS\u00a0173 and MATH\u00a0213. Prerequisite: One of CS\u00a0125, ECE\u00a0220; one of MATH\u00a0220, MATH\u00a0221.\n"},
{"name": "CS\u00a0196", "ptag": "\nOffered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).\n"},
{"name": "CS\u00a0199", "ptag": "\nTopics vary. Approved for Letter and S/U grading. May be repeated.\n"},
{"name": "CS\u00a0210", "ptag": "\nEthics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS\u00a0210 and ECE\u00a0316. Prerequisite: CS\u00a0225. Junior standing required.\n"},
{"name": "CS\u00a0225", "ptag": "\nData abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS\u00a0125 or ECE\u00a0220; One of CS\u00a0173, MATH\u00a0213, MATH\u00a0347, MATH\u00a0412 or MATH\u00a0413.  This course satisfies the General Education Criteria for:Quantitative Reasoning II"},
{"name": "CS\u00a0233", "ptag": "\nFundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS\u00a0125 and CS\u00a0173; credit or concurrent enrollment in CS\u00a0225.\n"},
{"name": "CS\u00a0240", "ptag": "\nBasics of computer systems. Number representations, assembly/machine language, abstract models of processors (fetch/execute, memory hierarchy), processes/process control, simple memory management, file I/O and directories, network programming, usage of cloud services. Prerequisite: CS\u00a0225 or both CS 205 and CS 110C++.\n"},
{"name": "CS\u00a0241", "ptag": "\nBasics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS\u00a0241 and ECE\u00a0391. Prerequisite: CS\u00a0225 and CS\u00a0233.\n"},
{"name": "CS\u00a0242", "ptag": "\nIntensive programming lab intended to strengthen skills in programming. Prerequisite: CS\u00a0241.\n"},
{"name": "CS\u00a0265", "ptag": "\nSame as IS\u00a0265 and MACS\u00a0265. See MACS\u00a0265.\n"},
{"name": "CS\u00a0296", "ptag": "\nGroup projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).\n"},
{"name": "CS\u00a0357", "ptag": "\nFundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH\u00a0357. Credit is not given for CS\u00a0357 if credit for CS\u00a0450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS\u00a0101, CS\u00a0105 or CS\u00a0125; MATH\u00a0241; one of MATH\u00a0225, MATH\u00a0415, MATH\u00a0416 or ASRM\u00a0406.\n"},
{"name": "CS\u00a0361", "ptag": "\nIntroduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT\u00a0361. Credit is not given for both CS\u00a0361 and ECE\u00a0313. Prerequisite: MATH\u00a0220 or MATH\u00a0221; credit or concurrent registration in one of MATH\u00a0225, MATH\u00a0415 or MATH\u00a0416. For majors only.\n"},
{"name": "CS\u00a0374", "ptag": "\nAnalysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE\u00a0374. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0397", "ptag": "\nMay be repeated. Prerequisite: Consent of instructor.\n"},
{"name": "CS\u00a0398", "ptag": "\nSubject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.\n"},
{"name": "CS\u00a0410", "ptag": "\nTheory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0411", "ptag": "\nExamination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0412", "ptag": "\nConcepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0413", "ptag": "\nSame as MATH\u00a0413. See MATH\u00a0413.\n"},
{"name": "CS\u00a0414", "ptag": "\nOrganization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241 or ECE\u00a0391.\n"},
{"name": "CS\u00a0418", "ptag": "\nBasic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE\u00a0427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225; MATH\u00a0225 or MATH\u00a0415; MATH\u00a0241.\n"},
{"name": "CS\u00a0419", "ptag": "\nAdvanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0418.\n"},
{"name": "CS\u00a0420", "ptag": "\nFundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE\u00a0402 and ECE\u00a0492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0421", "ptag": "\nStructure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0233 or CS\u00a0240; CS\u00a0374.\n"},
{"name": "CS\u00a0422", "ptag": "\nExploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0421.\n"},
{"name": "CS\u00a0423", "ptag": "\nOrganization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE\u00a0423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241 or ECE\u00a0391.\n"},
{"name": "CS\u00a0424", "ptag": "\nSupervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241.\n"},
{"name": "CS\u00a0425", "ptag": "\nProtocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE\u00a0428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241 or ECE\u00a0391.\n"},
{"name": "CS\u00a0426", "ptag": "\nCompiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0421.\n"},
{"name": "CS\u00a0427", "ptag": "\nSoftware process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE\u00a0426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225 and CS 373.\n"},
{"name": "CS\u00a0428", "ptag": "\nContinuation of CS\u00a0427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE\u00a0429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0427.\n"},
{"name": "CS\u00a0429", "ptag": "\nContinuation of CS\u00a0427. Identical to CS\u00a0428 except for the additional writing component. See CS\u00a0428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS\u00a0427.This course satisfies the General Education Criteria for:Advanced Composition"},
{"name": "CS\u00a0431", "ptag": "\nA survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241 or ECE\u00a0391.\n"},
{"name": "CS\u00a0433", "ptag": "\nComputer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security. Same as CSE\u00a0422. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS\u00a0233.\n"},
{"name": "CS\u00a0436", "ptag": "\nDesign, application, analysis, and deployment of communication protocols and system software behind modern cloud/compute/network infrastructures. Students learn the internals of modern system infrastructures, including operating system networking kernels, cloud application service code, and firewall and router configuration. Students will gain experience with widely-used and production-grade code and systems, such as Cisco IOS, the Linux networking stack, and Amazon Web Services. This class links theory with practice to prepare students to confidently carry out tasks they will commonly encounter in industry, such as building an enterprise network, deploying a large-scale cloud service, or implementing a new network protocol. Same as ECE\u00a0435. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241 or ECE\u00a0391.\n"},
{"name": "CS\u00a0438", "ptag": "\nLayered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE\u00a0438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241 or ECE\u00a0391; one of ECE\u00a0313, MATH\u00a0461, MATH\u00a0463.\n"},
{"name": "CS\u00a0439", "ptag": "\nSame as ECE\u00a0439. See ECE\u00a0439.\n"},
{"name": "CS\u00a0440", "ptag": "\nMajor topics in and directions of research in artificial intelligence: basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE\u00a0448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0445", "ptag": "\nComputer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225, MATH\u00a0225, and MATH\u00a0231.\n"},
{"name": "CS\u00a0446", "ptag": "\nPrinciples and applications of machine learning. Main paradigms and techniques, including discriminative and generative methods, reinforcement learning: linear regression, logistic regression, support vector machines, deep nets, structured methods, dimensionality reduction, k-means, Gaussian mixtures, expectation maximization, Markov decision processes, and Q-learning. Application areas such as natural language and text understanding, speech recognition, computer vision, data mining, and adaptive computer systems, among others. Same as ECE\u00a0449. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225; One of MATH\u00a0225, MATH\u00a0415, MATH\u00a0416 or ASRM\u00a0406; One of CS\u00a0361, ECE\u00a0313, MATH\u00a0461 or STAT\u00a0400.\n"},
{"name": "CS\u00a0447", "ptag": "\nPart-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS\u00a0447 and LING\u00a0406. Prerequisite: CS\u00a0374.\n"},
{"name": "CS\u00a0450", "ptag": "\nLinear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE\u00a0401, ECE\u00a0491, and MATH\u00a0450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS\u00a0450 and CS\u00a0457. Prerequisite: CS\u00a0101 or CS\u00a0125; CS\u00a0357 or MATH\u00a0415; MATH\u00a0285.\n"},
{"name": "CS\u00a0457", "ptag": "\nContinuation of CS\u00a0357. Orthogonalization methods for least squares, Krylov subspace methods, non-linear equations and optimization in multiple dimensions, initial and boundary value problems for ordinary and partial differential equations. 3 undergraduate hours. No graduate credit. Credit is not given for both CS\u00a0457 and CS\u00a0450. Prerequisite: CS\u00a0357.\n"},
{"name": "CS\u00a0460", "ptag": "\nOperating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS\u00a0461 via hands-on project. Same as ECE\u00a0419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0461.\n"},
{"name": "CS\u00a0461", "ptag": "\nFundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE\u00a0422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS\u00a0241 or ECE\u00a0391.\n"},
{"name": "CS\u00a0463", "ptag": "\nProgram security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE\u00a0424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0461. Recommended: CS\u00a0475.\n"},
{"name": "CS\u00a0465", "ptag": "\nA project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0466", "ptag": "\nAlgorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0467", "ptag": "\nVisualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225.\n"},
{"name": "CS\u00a0468", "ptag": "\nSame as ADV\u00a0492. See ADV\u00a0492.\n"},
{"name": "CS\u00a0473", "ptag": "\nDesign and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE\u00a0414 and MATH\u00a0473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS\u00a0374, and one of CS\u00a0361, MATH\u00a0461, or STAT\u00a0400.\n"},
{"name": "CS\u00a0475", "ptag": "\nFinite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH\u00a0475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0374.\n"},
{"name": "CS\u00a0476", "ptag": "\nFormal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225; CS\u00a0374 or MATH\u00a0414.\n"},
{"name": "CS\u00a0477", "ptag": "\nMathematical models, languages, and methods for software specification, development, and verification. Same as ECE\u00a0478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0225; CS 373 or MATH\u00a0414.\n"},
{"name": "CS\u00a0481", "ptag": "\nSame as IE\u00a0410. See IE\u00a0410.\n"},
{"name": "CS\u00a0482", "ptag": "\nSame as IE\u00a0413. See IE\u00a0413.\n"},
{"name": "CS\u00a0483", "ptag": "\nSame as CSE\u00a0408 and ECE\u00a0408. See ECE\u00a0408.\n"},
{"name": "CS\u00a0484", "ptag": "\nTechniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS\u00a0241.\n"},
{"name": "CS\u00a0491", "ptag": "\nSeminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.\n"},
{"name": "CS\u00a0492", "ptag": "\nFirst part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS\u00a0492 must be taken as a sequence with either CS\u00a0493 or CS\u00a0494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS\u00a0492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.\n"},
{"name": "CS\u00a0493", "ptag": "\nContinuation of CS\u00a0492. Identical to CS\u00a0494 except for an additional writing component. See CS\u00a0494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS\u00a0493 and a project course in another engineering department for the same project. Prerequisite: CS\u00a0492.This course satisfies the General Education Criteria for:Advanced Composition"},
{"name": "CS\u00a0494", "ptag": "\nContinuation of CS\u00a0492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS\u00a0494 and a project course in another engineering department for the same project. Prerequisite: CS\u00a0492.\n"},
{"name": "CS\u00a0497", "ptag": "\nStudent teams work with CS faculty to complete a significant project requiring advanced knowledge of CS principles. Project topics vary. 1 to 3 undergraduate hours. No graduate credit. May be repeated in the same term up to 6 hours, if topics vary; may be repeated in separate terms. Prerequisite: For majors only; junior or senior standing required.\n"},
{"name": "CS\u00a0498", "ptag": "\nSubject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.\n"},
{"name": "CS\u00a0499", "ptag": "\nResearch and thesis development experience in computer science underguidance of a faculty member. Literature search, oral presentation, analysis and implementation, paper preparation, and completion of a written thesis. 3 undergraduate hours. No graduate credit. May be repeated to a maximum of 6 hours. Prerequisite: Consent of instructor.This course satisfies the General Education Criteria for:Advanced Composition"},
{"name": "CS\u00a0508", "ptag": "\nSame as ECE\u00a0508. See ECE\u00a0508.\n"},
{"name": "CS\u00a0510", "ptag": "\nAdvanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS\u00a0410, CS\u00a0412, CS\u00a0446 or LING\u00a0406.\n"},
{"name": "CS\u00a0511", "ptag": "\nAdvanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS\u00a0411.\n"},
{"name": "CS\u00a0512", "ptag": "\nAn advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS\u00a0412.\n"},
{"name": "CS\u00a0513", "ptag": "\nSame as IS\u00a0532. See IS\u00a0532.\n"},
{"name": "CS\u00a0519", "ptag": "\nVisualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Same as CSE\u00a0527. Prerequisite: CS\u00a0418.\n"},
{"name": "CS\u00a0522", "ptag": "\nTheory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS\u00a0422 and CS\u00a0426.\n"},
{"name": "CS\u00a0523", "ptag": "\nAdvanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS\u00a0423, CS\u00a0425, and CS\u00a0433.\n"},
{"name": "CS\u00a0524", "ptag": "\nTheory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS\u00a0422; CS\u00a0475 or CS\u00a0476.\n"},
{"name": "CS\u00a0525", "ptag": "\nPeer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS\u00a0423, CS\u00a0425, CS\u00a0438.\n"},
{"name": "CS\u00a0526", "ptag": "\nIncremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS\u00a0426.\n"},
{"name": "CS\u00a0527", "ptag": "\nFault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS\u00a0428 or CS\u00a0429.\n"},
{"name": "CS\u00a0528", "ptag": "\nPrinciples of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS\u00a0427.\n"},
{"name": "CS\u00a0533", "ptag": "\nTheoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE\u00a0522. Prerequisite: CS\u00a0433.\n"},
{"name": "CS\u00a0536", "ptag": "\nSame as ECE\u00a0542. See ECE\u00a0542.\n"},
{"name": "CS\u00a0538", "ptag": "\nAdvanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS\u00a0438.\n"},
{"name": "CS\u00a0539", "ptag": "\nSame as ECE\u00a0526. See ECE\u00a0526.\n"},
{"name": "CS\u00a0541", "ptag": "\nSame as ECE\u00a0541. See ECE\u00a0541.\n"},
{"name": "CS\u00a0543", "ptag": "\nSame as ECE\u00a0549. See ECE\u00a0549.\n"},
{"name": "CS\u00a0544", "ptag": "\nApplications of continuous and discrete optimization to problems in computer vision and machine learning, with particular emphasis on large-scale algorithms and effective approximations: gradient-based learning; Newton's method and variants, applied to structure from motion problems; the augmented Lagrangian method and variants; interior-point methods; SMO and other specialized algorithms for support vector machines; flows and cuts as examples of primal-dual methods; dynamics programming, hidden Markov models, and parsing: 0-1 quadratic forms, max-cut, and Markov random-fields solutions. Prerequisite: CS\u00a0450 and CS\u00a0473.\n"},
{"name": "CS\u00a0546", "ptag": "\nCentral learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS\u00a0446 and CS\u00a0473.\n"},
{"name": "CS\u00a0547", "ptag": "\nSame as IE\u00a0534. See IE\u00a0534.\n"},
{"name": "CS\u00a0548", "ptag": "\nFormal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. Same as ECE\u00a0548. Prerequisite: CS\u00a0440 or CS\u00a0446.\n"},
{"name": "CS\u00a0549", "ptag": "\nSame as PSYC\u00a0514, ANTH\u00a0514, EPSY\u00a0551, LING\u00a0570, and PHIL\u00a0514. See PSYC\u00a0514.\n"},
{"name": "CS\u00a0554", "ptag": "\nNumerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE\u00a0512. Prerequisite: One of CS\u00a0450, CS\u00a0457, CS\u00a0555.\n"},
{"name": "CS\u00a0555", "ptag": "\nNumerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE\u00a0510. Prerequisite: CS\u00a0450 or CS\u00a0457.\n"},
{"name": "CS\u00a0556", "ptag": "\nComprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE\u00a0511.\n"},
{"name": "CS\u00a0558", "ptag": "\nAdvanced topics in numerical analysis selected from areas of current research. Same as CSE\u00a0513. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.\n"},
{"name": "CS\u00a0563", "ptag": "\nCurrent research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE\u00a0524. Prerequisite: CS\u00a0461 or CS\u00a0463.\n"},
{"name": "CS\u00a0565", "ptag": "\nIn-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS\u00a0465.\n"},
{"name": "CS\u00a0571", "ptag": "\nSame as MATH\u00a0580. See MATH\u00a0580.\n"},
{"name": "CS\u00a0572", "ptag": "\nSame as MATH\u00a0581. See MATH\u00a0581.\n"},
{"name": "CS\u00a0573", "ptag": "\nNP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE\u00a0515. 4 graduate hours. No professional credit.\n"},
{"name": "CS\u00a0574", "ptag": "\nBasic and advanced concepts in the design and analysis of randomized algorithms. Sampling; concentration inequalities such as Chernoff-Hoeffding bounds; probabilistic method; random walks, dimension reduction; entropy; martingales and Azuma's inequality; derandomization. Randomized algorithms for sorting and searching; graphs; geometric problems. Basics of pseudorandomness and randomized complexity classes. Prerequisite: CS\u00a0473; MATH\u00a0461 or STAT\u00a0400.\n"},
{"name": "CS\u00a0575", "ptag": "\nSame as MATH\u00a0584. See MATH\u00a0584.\n"},
{"name": "CS\u00a0576", "ptag": "\nAdvanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.\n"},
{"name": "CS\u00a0579", "ptag": "\nTuring machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE\u00a0579. Prerequisite: CS\u00a0473 or CS\u00a0475.\n"},
{"name": "CS\u00a0581", "ptag": "\nThe purpose of the course is to give each student enough background and training in the area of algorithmic genomic biology so that each will be able to do research in this area, and publish papers. The main focus of the course is phylogeny (evolutionary tree) estimation, multiple sequence alignment, and genome-scale phylogenetics, which are problems that present very interesting challenges from a computational and statistical standpoint. Time permitting, we will also discuss computational problems in microbiome analysis, protein function and structure prediction, genome assembly, and even historical linguistics. Students will learn the mathematical and computational foundations in these areas, read the current literature, and do a team research project. The course is designed for doctoral students in computer science, computer engineering, bioengineering, mathematics, and statistics, and does not depend on any prior background in biology. The technical material will depend on discrete algorithms, graph theory, simulations, and probabilistic analysis of algorithms. 4 graduate hours. No professional credit. Prerequisite: CS\u00a0374 and CS\u00a0361/STAT\u00a0361, or consent of instructor.\n"},
{"name": "CS\u00a0583", "ptag": "\nApproximation algorithms for NP-hard problems. Basic and advanced techniques in approximation algorithm design: combinatorial algorithms; mathematical programming methods including linear and semi-definite programming, local search methods, and others. Algorithms for graphs and networks, constraint satisfaction, packing and scheduling. Prerequisite: CS\u00a0573 or consent of instructor.\n"},
{"name": "CS\u00a0584", "ptag": "\nSame as ECE\u00a0584. See ECE\u00a0584.\n"},
{"name": "CS\u00a0585", "ptag": "\nSame as ECE\u00a0519. See ECE\u00a0519.\n"},
{"name": "CS\u00a0586", "ptag": "\nSame as IE\u00a0519. See IE\u00a0519.\n"},
{"name": "CS\u00a0591", "ptag": "\nSeminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.\n"},
{"name": "CS\u00a0597", "ptag": "\nIndividual study or reading in a subject not covered in normal course offerings. May be repeated. Prerequisite: Consent of instructor.\n"},
{"name": "CS\u00a0598", "ptag": "\nSubject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.\n"},
{"name": "CS\u00a0599", "ptag": "\nApproved for S/U grading only. May be repeated.\n"},
]